package es.sealsign.bss;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.7.0
//
// Created by Quasar Development at 15-06-2015
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.EnumSet;

public class BSBSignatureReference extends AttributeContainer implements KvmSerializable
{
    
    public BSBArrayOfSignatureReference counterSignatures=new BSBArrayOfSignatureReference();
    
    public BSBEnums.HashAlgorithm hashAlgorithm;
    
    public byte[] signatureCertificate;
    
    public EnumSet<BSBEnums.SignatureFlags> signatureFlags;
    
    public String signatureID;
    
    public BSBEnums.SignatureProfile signatureProfile;
    
    public BSBEnums.VerificationStatus signatureStatus;
    
    public BSBEnums.SignatureType signatureType;
    
    public org.joda.time.DateTime signingTime;
    
    public BSBArrayOfTimestampReference timestamps=new BSBArrayOfTimestampReference();
    
    public BSBArrayOfTimestampReference validationTimestamps=new BSBArrayOfTimestampReference();

    public BSBSignatureReference ()
    {
    }

    public BSBSignatureReference (java.lang.Object paramObj,BSBExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("counterSignatures"))
        {	
	        java.lang.Object j = soapObject.getProperty("counterSignatures");
	        this.counterSignatures = new BSBArrayOfSignatureReference(j,__envelope);
        }
        if (soapObject.hasProperty("hashAlgorithm"))
        {	
	        java.lang.Object obj = soapObject.getProperty("hashAlgorithm");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.hashAlgorithm = BSBEnums.HashAlgorithm.fromString(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof BSBEnums.HashAlgorithm){
                this.hashAlgorithm = (BSBEnums.HashAlgorithm)obj;
            }    
        }
        if (soapObject.hasProperty("signatureCertificate"))
        {	
	        java.lang.Object j = soapObject.getProperty("signatureCertificate");
	        this.signatureCertificate = BSBHelper.getBinary(j,false);
        }
        if (soapObject.hasProperty("signatureFlags"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signatureFlags");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signatureFlags = BSBEnums.SignatureFlags.getStatusFlags(j.toString());
                }
	        }
        }
        if (soapObject.hasProperty("signatureID"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signatureID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signatureID = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.signatureID = (String)obj;
            }    
        }
        if (soapObject.hasProperty("signatureProfile"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signatureProfile");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signatureProfile = BSBEnums.SignatureProfile.fromString(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof BSBEnums.SignatureProfile){
                this.signatureProfile = (BSBEnums.SignatureProfile)obj;
            }    
        }
        if (soapObject.hasProperty("signatureStatus"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signatureStatus");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signatureStatus = BSBEnums.VerificationStatus.fromString(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof BSBEnums.VerificationStatus){
                this.signatureStatus = (BSBEnums.VerificationStatus)obj;
            }    
        }
        if (soapObject.hasProperty("signatureType"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signatureType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signatureType = BSBEnums.SignatureType.fromString(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof BSBEnums.SignatureType){
                this.signatureType = (BSBEnums.SignatureType)obj;
            }    
        }
        if (soapObject.hasProperty("signingTime"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signingTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signingTime = BSBHelper.ConvertFromWebService(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof org.joda.time.DateTime){
                this.signingTime = (org.joda.time.DateTime)obj;
            }    
        }
        if (soapObject.hasProperty("timestamps"))
        {	
	        java.lang.Object j = soapObject.getProperty("timestamps");
	        this.timestamps = new BSBArrayOfTimestampReference(j,__envelope);
        }
        if (soapObject.hasProperty("validationTimestamps"))
        {	
	        java.lang.Object j = soapObject.getProperty("validationTimestamps");
	        this.validationTimestamps = new BSBArrayOfTimestampReference(j,__envelope);
        }


    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.counterSignatures!=null?this.counterSignatures:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.hashAlgorithm!=null?this.hashAlgorithm.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.signatureCertificate!=null?org.kobjects.base64.Base64.encode(this.signatureCertificate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return BSBEnums.SignatureFlags.getFlagValue(signatureFlags);
        }
        if(propertyIndex==4)
        {
            return this.signatureID!=null?this.signatureID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.signatureProfile!=null?this.signatureProfile.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.signatureStatus!=null?this.signatureStatus.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.signatureType!=null?this.signatureType.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.signingTime!=null?this.signingTime.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.timestamps!=null?this.timestamps:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.validationTimestamps!=null?this.validationTimestamps:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 11;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "counterSignatures";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "hashAlgorithm";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signatureCertificate";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signatureFlags";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signatureID";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signatureProfile";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signatureStatus";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signatureType";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signingTime";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "timestamps";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "validationTimestamps";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    @Override
    public String getInnerText() {
        return null;
    }

    @Override
    public void setInnerText(String s) {

    }
}
