package es.sealsign.bss;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.7.0
//
// Created by Quasar Development at 15-06-2015
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class BSBSignatureParameters extends AttributeContainer implements KvmSerializable
{
    
    public String algorithmCaption;
    
    public String algorithmInfo;
    
    public String city;
    
    public String country;
    
    public String documentPassword;
    
    public String header;
    
    public BSBPDFSignatureParameters pdfParameters;
    
    public String policyCMSQualifierURI;
    
    public String policyDigest;
    
    public String policyIdentifier;
    
    public String postalCode;
    
    public String reason;
    
    public String reference;
    
    public String signerCaption;
    
    public String signerInfo;
    
    public String signerRole;
    
    public String state;
    
    public Integer timestampBackupServerId;
    
    public Integer timestampServerId;

    public BSBSignatureParameters ()
    {
    }

    public BSBSignatureParameters (java.lang.Object paramObj,BSBExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("algorithmCaption"))
        {	
	        java.lang.Object obj = soapObject.getProperty("algorithmCaption");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.algorithmCaption = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.algorithmCaption = (String)obj;
            }    
        }
        if (soapObject.hasProperty("algorithmInfo"))
        {	
	        java.lang.Object obj = soapObject.getProperty("algorithmInfo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.algorithmInfo = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.algorithmInfo = (String)obj;
            }    
        }
        if (soapObject.hasProperty("city"))
        {	
	        java.lang.Object obj = soapObject.getProperty("city");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.city = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.city = (String)obj;
            }    
        }
        if (soapObject.hasProperty("country"))
        {	
	        java.lang.Object obj = soapObject.getProperty("country");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.country = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.country = (String)obj;
            }    
        }
        if (soapObject.hasProperty("documentPassword"))
        {	
	        java.lang.Object obj = soapObject.getProperty("documentPassword");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.documentPassword = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.documentPassword = (String)obj;
            }    
        }
        if (soapObject.hasProperty("header"))
        {	
	        java.lang.Object obj = soapObject.getProperty("header");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.header = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.header = (String)obj;
            }    
        }
        if (soapObject.hasProperty("pdfParameters"))
        {	
	        java.lang.Object j = soapObject.getProperty("pdfParameters");
	        this.pdfParameters = (BSBPDFSignatureParameters)__envelope.get(j,BSBPDFSignatureParameters.class);
        }
        if (soapObject.hasProperty("policyCMSQualifierURI"))
        {	
	        java.lang.Object obj = soapObject.getProperty("policyCMSQualifierURI");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.policyCMSQualifierURI = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.policyCMSQualifierURI = (String)obj;
            }    
        }
        if (soapObject.hasProperty("policyDigest"))
        {	
	        java.lang.Object obj = soapObject.getProperty("policyDigest");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.policyDigest = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.policyDigest = (String)obj;
            }    
        }
        if (soapObject.hasProperty("policyIdentifier"))
        {	
	        java.lang.Object obj = soapObject.getProperty("policyIdentifier");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.policyIdentifier = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.policyIdentifier = (String)obj;
            }    
        }
        if (soapObject.hasProperty("postalCode"))
        {	
	        java.lang.Object obj = soapObject.getProperty("postalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.postalCode = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.postalCode = (String)obj;
            }    
        }
        if (soapObject.hasProperty("reason"))
        {	
	        java.lang.Object obj = soapObject.getProperty("reason");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.reason = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.reason = (String)obj;
            }    
        }
        if (soapObject.hasProperty("reference"))
        {	
	        java.lang.Object obj = soapObject.getProperty("reference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.reference = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.reference = (String)obj;
            }    
        }
        if (soapObject.hasProperty("signerCaption"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signerCaption");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signerCaption = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.signerCaption = (String)obj;
            }    
        }
        if (soapObject.hasProperty("signerInfo"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signerInfo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signerInfo = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.signerInfo = (String)obj;
            }    
        }
        if (soapObject.hasProperty("signerRole"))
        {	
	        java.lang.Object obj = soapObject.getProperty("signerRole");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.signerRole = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.signerRole = (String)obj;
            }    
        }
        if (soapObject.hasProperty("state"))
        {	
	        java.lang.Object obj = soapObject.getProperty("state");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.state = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.state = (String)obj;
            }    
        }
        if (soapObject.hasProperty("timestampBackupServerId"))
        {	
	        java.lang.Object obj = soapObject.getProperty("timestampBackupServerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.timestampBackupServerId = Integer.parseInt(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof Integer){
                this.timestampBackupServerId = (Integer)obj;
            }    
        }
        if (soapObject.hasProperty("timestampServerId"))
        {	
	        java.lang.Object obj = soapObject.getProperty("timestampServerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.timestampServerId = Integer.parseInt(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof Integer){
                this.timestampServerId = (Integer)obj;
            }    
        }


    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.algorithmCaption!=null?this.algorithmCaption:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.algorithmInfo!=null?this.algorithmInfo:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.city!=null?this.city:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.country!=null?this.country:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.documentPassword!=null?this.documentPassword:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.header!=null?this.header:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.pdfParameters!=null?this.pdfParameters:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.policyCMSQualifierURI!=null?this.policyCMSQualifierURI:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.policyDigest!=null?this.policyDigest:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.policyIdentifier!=null?this.policyIdentifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.postalCode!=null?this.postalCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==11)
        {
            return this.reason!=null?this.reason:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==12)
        {
            return this.reference!=null?this.reference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==13)
        {
            return this.signerCaption!=null?this.signerCaption:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.signerInfo!=null?this.signerInfo:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==15)
        {
            return this.signerRole!=null?this.signerRole:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==16)
        {
            return this.state!=null?this.state:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==17)
        {
            return this.timestampBackupServerId!=null?this.timestampBackupServerId:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==18)
        {
            return this.timestampServerId!=null?this.timestampServerId:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 19;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "algorithmCaption";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "algorithmInfo";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "city";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "country";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "documentPassword";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "header";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==6)
        {
            info.type = BSBPDFSignatureParameters.class;
            info.name = "pdfParameters";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "policyCMSQualifierURI";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "policyDigest";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "policyIdentifier";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "postalCode";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reason";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==12)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reference";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signerCaption";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signerInfo";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signerRole";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==16)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "state";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==17)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "timestampBackupServerId";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==18)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "timestampServerId";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    @Override
    public String getInnerText() {
        return null;
    }

    @Override
    public void setInnerText(String s) {

    }
}
