package es.sealsign.bss;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.7.0
//
// Created by Quasar Development at 15-06-2015
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class BSBTimestampReference extends AttributeContainer implements KvmSerializable
{
    
    public BSBArrayOfSignatureReference timestampSignatures=new BSBArrayOfSignatureReference();
    
    public Boolean timestampSuitable;
    
    public org.joda.time.DateTime timestampTime;
    
    public BSBEnums.TimestampType timestampType;

    public BSBTimestampReference ()
    {
    }

    public BSBTimestampReference (java.lang.Object paramObj,BSBExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("timestampSignatures"))
        {	
	        java.lang.Object j = soapObject.getProperty("timestampSignatures");
	        this.timestampSignatures = new BSBArrayOfSignatureReference(j,__envelope);
        }
        if (soapObject.hasProperty("timestampSuitable"))
        {	
	        java.lang.Object obj = soapObject.getProperty("timestampSuitable");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.timestampSuitable = new Boolean(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof Boolean){
                this.timestampSuitable = (Boolean)obj;
            }    
        }
        if (soapObject.hasProperty("timestampTime"))
        {	
	        java.lang.Object obj = soapObject.getProperty("timestampTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.timestampTime = BSBHelper.ConvertFromWebService(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof org.joda.time.DateTime){
                this.timestampTime = (org.joda.time.DateTime)obj;
            }    
        }
        if (soapObject.hasProperty("timestampType"))
        {	
	        java.lang.Object obj = soapObject.getProperty("timestampType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.timestampType = BSBEnums.TimestampType.fromString(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof BSBEnums.TimestampType){
                this.timestampType = (BSBEnums.TimestampType)obj;
            }    
        }


    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.timestampSignatures!=null?this.timestampSignatures:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.timestampSuitable!=null?this.timestampSuitable:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.timestampTime!=null?this.timestampTime.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.timestampType!=null?this.timestampType.toString():SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 4;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "timestampSignatures";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "timestampSuitable";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "timestampTime";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "timestampType";
            info.namespace= "http://schemas.datacontract.org/2004/07/SealSignDSSTypes";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    @Override
    public String getInnerText() {
        return null;
    }

    @Override
    public void setInnerText(String s) {

    }
}
